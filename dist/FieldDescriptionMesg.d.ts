import Mesg from './Mesg';
declare class FieldDescriptionMesg extends Mesg {
    static DeveloperDataIndexFieldNum: number;
    static FieldDefinitionNumberFieldNum: number;
    static FitBaseTypeIdFieldNum: number;
    static FieldNameFieldNum: number;
    static ArrayFieldNum: number;
    static ComponentsFieldNum: number;
    static ScaleFieldNum: number;
    static OffsetFieldNum: number;
    static UnitsFieldNum: number;
    static BitsFieldNum: number;
    static AccumulateFieldNum: number;
    static FitBaseUnitIdFieldNum: number;
    static NativeMesgNumFieldNum: number;
    static NativeFieldNumFieldNum: number;
    constructor(mesg?: Mesg);
    private initFields;
    getDeveloperDataIndex(): number | null;
    setDeveloperDataIndex(developerDataIndex: number | null): void;
    getFieldDefinitionNumber(): number | null;
    setFieldDefinitionNumber(fieldDefinitionNumber: number | null): void;
    getFitBaseTypeId(): number | null;
    setFitBaseTypeId(fitBaseTypeId: number | null): void;
    getNumFieldName(): number;
    setFieldName(index: number, fieldName: string): void;
    getArray(): number | null;
    setArray(array: number | null): void;
    getComponents(): string;
    setComponents(components: string): void;
    getScale(): number | null;
    setScale(scale: number | null): void;
    getOffset(): number | null;
    setOffset(offset: number | null): void;
    getNumUnits(): number;
    setUnits(index: number, units: string): void;
    getBits(): string;
    setBits(bits: string): void;
    getAccumulate(): string;
    setAccumulate(accumulate: string): void;
    getFitBaseUnitId(): number | null;
    setFitBaseUnitId(fitBaseUnitId: number | null): void;
    getNativeMesgNum(): number | null;
    setNativeMesgNum(nativeMesgNum: number | null): void;
    getNativeFieldNum(): number | null;
    setNativeFieldNum(nativeFieldNum: number | null): void;
}
export default FieldDescriptionMesg;
